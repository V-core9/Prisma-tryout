datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id       Int      @id @default(autoincrement())
  slug     String?  @unique
  title    String?
  content  String
  status   String?  @default("draft")
  author   User?    @relation(fields: [authorId], references: [id])
  authorId Int?
  created  DateTime @default(now())
  updated  DateTime @default(now())
}

model Page {
  id         Int      @id @default(autoincrement())
  slug       String?  @unique
  title      String?
  meta_title String   @default("")
  meta_desc  String   @default("")
  content    String   @default("")
  status     String?  @default("draft")
  author     User?    @relation(fields: [authorId], references: [id])
  authorId   Int?
  created    DateTime @default(now())
  updated    DateTime @default(now())
}

model Diary {
  id       Int      @id @default(autoincrement())
  slug     String?  @unique
  title    String?
  content  String   @default("")
  status   String?  @default("draft")
  author   User?    @relation(fields: [authorId], references: [id])
  authorId Int?
  created  DateTime @default(now())
  updated  DateTime @default(now())
}

model Permission {
  id      Int      @id @default(autoincrement())
  slug    String?  @unique
  title   String?
  content String   @default("")
  status  String?  @default("draft")
  role    Role?    @relation(fields: [roleId], references: [id])
  roleId  Int?
  created DateTime @default(now())
  updated DateTime @default(now())
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  users       User[]
  permissions Permission[]
}

model User {
  id       Int      @id @default(autoincrement())
  email    String   @unique
  username String?  @unique
  password String
  salt     String
  updated  DateTime @default(now())
  regTime  DateTime @default(now())
  verified Boolean? @default(false)
  disabled Boolean? @default(false)
  blocked  Boolean? @default(false)
  active   Boolean? @default(true)
  role     Role?    @relation(fields: [roleId], references: [id])
  roleId   Int?
  posts    Post[]
  pages    Page[]
  diaries  Diary[]
}
